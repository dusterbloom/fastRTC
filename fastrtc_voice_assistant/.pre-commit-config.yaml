repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: check-yaml
      - id: check-added-large-files
      - id: check-merge-conflict
      - id: check-toml
      - id: debug-statements
      - id: mixed-line-ending

  - repo: https://github.com/psf/black
    rev: 23.1.0
    hooks:
      - id: black
        language_version: python3
        args: [--line-length=100]

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: [--profile=black, --line-length=100]

  - repo: https://github.com/pycqa/flake8
    rev: 6.0.0
    hooks:
      - id: flake8
        args: [--max-line-length=100, --extend-ignore=E203,W503]
        additional_dependencies: [flake8-docstrings, flake8-import-order]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.0.0
    hooks:
      - id: mypy
        additional_dependencies: [types-requests, types-PyYAML]
        args: [--ignore-missing-imports, --no-strict-optional]

  - repo: https://github.com/pycqa/bandit
    rev: 1.7.4
    hooks:
      - id: bandit
        args: [-r, src]
        exclude: tests/

  - repo: https://github.com/Lucas-C/pre-commit-hooks-safety
    rev: v1.3.2
    hooks:
      - id: python-safety-dependencies-check

  - repo: local
    hooks:
      - id: pytest-unit
        name: pytest-unit
        entry: pytest tests/unit/ -v --tb=short
        language: system
        pass_filenames: false
        always_run: true

      - id: coverage-check
        name: coverage-check
        entry: bash -c 'coverage run -m pytest tests/unit/ && coverage report --fail-under=80'
        language: system
        pass_filenames: false
        always_run: true

      - id: docstring-check
        name: docstring-check
        entry: python -c "
import ast
import sys
from pathlib import Path

def check_docstrings(file_path):
    with open(file_path, 'r') as f:
        tree = ast.parse(f.read())
    
    missing_docstrings = []
    
    for node in ast.walk(tree):
        if isinstance(node, (ast.FunctionDef, ast.ClassDef, ast.AsyncFunctionDef)):
            if not ast.get_docstring(node):
                missing_docstrings.append(f'{file_path}:{node.lineno} - {node.name}')
    
    return missing_docstrings

all_missing = []
for file_path in sys.argv[1:]:
    if file_path.endswith('.py') and 'src/' in file_path:
        missing = check_docstrings(file_path)
        all_missing.extend(missing)

if all_missing:
    print('Missing docstrings:')
    for item in all_missing:
        print(f'  {item}')
    sys.exit(1)
"
        language: system
        files: \.py$
        exclude: tests/

ci:
  autofix_commit_msg: |
    [pre-commit.ci] auto fixes from pre-commit.com hooks

    for more information, see https://pre-commit.ci
  autofix_prs: true
  autoupdate_branch: ''
  autoupdate_commit_msg: '[pre-commit.ci] pre-commit autoupdate'
  autoupdate_schedule: weekly
  skip: []
  submodules: false